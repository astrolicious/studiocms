---
import { Button, Divider, ProgressRing, VisuallyHidden } from '@matthiesenxyz/astrolace/components';

const FetchURL = Astro.site || '';

const linkToExternalTest = `https://pagespeed.web.dev/analysis?url=${encodeURIComponent(FetchURL.toString())}`;
---

<div class="pb-4">
    <Button variant="primary" name="run-test">Run Test</Button>
</div>

<Divider class="divider mt-0 pt-0" />

<div class="w-full flex flex-row flex-wrap gap-8">
    
    <div id="w-full flex flex-col">
        <div class="flex justify-center">
            <ProgressRing label="performance-score" id="perf-ring" value={0}>N/A</ProgressRing>
        </div>
        <div class="flex justify-center font-bold">Performance</div>
    </div>

    <div id="w-full flex flex-col">
        <div class="flex justify-center">
            <ProgressRing label="accessibility-score" id="acc-ring" value={0}>N/A</ProgressRing>
        </div>
        <div class="flex justify-center font-bold">Accessibility</div>
    </div>

    <div id="w-full flex flex-col">
        <div class="flex justify-center">
            <ProgressRing label="best-practices-score" id="bp-ring" value={0}>N/A</ProgressRing>
        </div>
        <div class="flex justify-center font-bold">Best Practices</div>
    </div>

    <div id="w-full flex flex-col">
        <div class="flex justify-center">
            <ProgressRing label="seo-score" id="seo-ring" value={0}>N/A</ProgressRing>
        </div>
        <div class="flex justify-center font-bold">SEO</div>
    </div>

</div>

<Divider class="divider" />

<div class="text-gray-500">
    Test results are generated using Google's PageSpeed Insights API. If you would like to see more details for the Results above, please visit the <a class="text-blue-500" href={linkToExternalTest} target="_blank" rel="noopener noreferrer">PageSpeed Insights Results</a>.
</div>

<VisuallyHidden>
    <div id="lighthouse-fetch-url">{FetchURL}</div>
</VisuallyHidden>

<style scoped>
    #perf-ring, #acc-ring, #bp-ring, #seo-ring {
        --track-width: 1rem;
        font-weight: bolder;
        font-size: 2rem;
    }
</style>

<script>
import type { SlButton, SlProgressRing } from "@matthiesenxyz/astrolace/types";
import { generateLighthouseFetchUrl, setProgressRing } from "./webVitalsUtils";

// get the URL to test from the hidden div
const urlToTest: string = document.getElementById('lighthouse-fetch-url')?.textContent || '';
const lighthouseFetchUrl: string = generateLighthouseFetchUrl(urlToTest);

// get the `Run Test` button and add an event listener to it
const runTestButton = document.getElementsByName('run-test')[0] as SlButton;

runTestButton.addEventListener('click', async (
    // I changed the name of the event from `e` to `buttonClickEvent` for @jdtjenkins(Jumper) since "He wants things to be more descriptive and 'Easier to read'".
    buttonClickEvent
) => {
    buttonClickEvent.preventDefault();

    runTestButton.loading = true;
    runTestButton.disabled = true;

    console.log('PageSpeed Insights test started.', lighthouseFetchUrl)

    // I changed the name of this from `response` to `lighthouseResponse` for @jdtjenkins(Jumper) since "He wants things to be more descriptive and 'Easier to read'".
    const lighthouseResponse = await fetch(lighthouseFetchUrl);

    let performanceScore = 0;
    let accessibilityScore = 0;
    let bestPracticesScore = 0;
    let seoScore = 0;

    if (!lighthouseResponse.ok) {
        console.error('Failed to fetch data from the PageSpeed Insights API.');
        return;
    }

    // I changed the name of this from `data` to `lighthouseData` for @jdtjenkins(Jumper) since "He wants things to be more descriptive and 'Easier to read'".
    const lighthouseData = await lighthouseResponse.json();

    console.log('Successfully fetched data from the PageSpeed Insights API.');

    performanceScore = lighthouseData.lighthouseResult.categories.performance.score * 100;
    accessibilityScore = lighthouseData.lighthouseResult.categories.accessibility.score * 100;
    bestPracticesScore = lighthouseData.lighthouseResult.categories['best-practices'].score * 100;
    seoScore = lighthouseData.lighthouseResult.categories.seo.score * 100;

    const performanceRing = document.getElementById('perf-ring') as SlProgressRing;
    const accessibilityRing = document.getElementById('acc-ring') as SlProgressRing;
    const bestPracticesRing = document.getElementById('bp-ring') as SlProgressRing;
    const seoRing = document.getElementById('seo-ring') as SlProgressRing;
        
    setProgressRing(performanceRing, performanceScore);
    setProgressRing(accessibilityRing, accessibilityScore);
    setProgressRing(bestPracticesRing, bestPracticesScore);
    setProgressRing(seoRing, seoScore);

    runTestButton.loading = false;
    runTestButton.disabled = false;
})

</script>