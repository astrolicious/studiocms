---
import Icon from '../../utils/Icon.astro';
import Button from '../Button.astro';

type ModalButton = 'cancel' | 'confirm';

type Props = {
	id: string;
	size?: 'sm' | 'md' | 'lg';
	dismissable?: boolean;
	buttons?: ModalButton[];
	isForm?: boolean;
};

const { id, size = 'md', dismissable = true, isForm = false, buttons = [] } = Astro.props;
---
<!-- Should: Be centered on mobile, scroll happens inside, blur bg -->
<dialog 
  popover
  id={id}
  data-dismissable={`${dismissable}`}
  data-buttons={buttons.join(";")}
  class="modal"
  class:list={[size]}
  data-form={`${isForm}`}
>
  <div class="modal-header">
    <slot name="header" />
    {dismissable && (
      <button class="x-mark-container" id={`${id}-btn-x`}>
        <Icon name="x-mark" width={24} height={24} class={'dismiss-icon'} />
      </button>
    )}
  </div>
  <form id={`${id}-form-element`}>
    <div class="modal-body">
      <slot />
    </div>
    <div class="modal-footer">
      {buttons.includes('cancel') && (
        <Button id={`${id}-btn-cancel`} color='danger' variant='flat' type={isForm ? 'reset' : 'button'}>
          Cancel
        </Button>
      )}
      {buttons.includes('confirm') && (
        <Button id={`${id}-btn-confirm`} type={'submit'} color='primary' variant='solid' type={isForm ? 'submit' : 'button'}>
          Confirm
        </Button>
      )}
    </div>
  </form>
</dialog>
<style is:global>
  .modal {
    border: 1px solid hsl(var(--border));
    border-radius: .5rem;
    padding: 1rem;
    box-shadow: 0px 6px 8px hsl(var(--shadow));
    animation: hide .25s ease;
    overflow: visible;
  }

  .modal.sm {
    width: 384px;
  }

  .modal.md {
    width: 448px;
  }
  
  .modal.lg {
    width: 512px;
  }

  .modal[open] {
    animation: show .25s ease-in-out;
  }

  html:has(.modal[open]), body:has(.modal[open]) {
    overflow: hidden;
  }

  .modal[open]::backdrop {
    filter: blur(4px);
    background-color: rgba(0, 0, 0, .5);
    animation: backdrop 1s ease-in-out forwards;
  }

  .modal-header:has(*) {
    margin-bottom: 1rem;

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 1rem;

    * {
      margin: 0;
    }
  }

  .x-mark-container {
    cursor: pointer;
    height: 1.5rem;
    width: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color .15s ease;
    border-radius: .25rem;
  }

  .x-mark-container:hover {
    background-color: hsl(var(--default-base));
  }

  .modal-footer {
    display: none;
  }

  .modal-footer:has(*) {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    margin-top: 1rem;
    justify-content: end;
  }

  @keyframes hide {
    0% {
      scale: 1;
      opacity: 1;
      display: block;
    }
    100% {
      scale: .85;
      opacity: 0;
      display: none;
    }
  }

  @keyframes show {
    0% {
      scale: .85;
      opacity: 0;
      display: none;
    }
    100% {
      scale: 1;
      opacity: 1;
      display: block;
    }
  }

  @keyframes backdrop {
    0% {
      opacity: 0;
    }
    0% {
      opacity: 1;
    }
  }
</style>