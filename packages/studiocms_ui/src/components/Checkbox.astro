---
import Icon from '../utils/Icon.astro';
import type { StudioCMSColorway } from '../utils/colors';
import { generateID } from '../utils/generateID';

type Props = {
	label: string;
	size?: 'sm' | 'md' | 'lg';
	color?: StudioCMSColorway;
	defaultChecked?: boolean;
	disabled?: boolean;
	name?: string;
	isRequired?: boolean;
};

const {
	size = 'md',
	color = 'default',
	defaultChecked,
	disabled,
	name = generateID('checkbox'),
	label,
	isRequired,
} = Astro.props;

const iconSizes = {
	sm: 14,
	md: 16,
	lg: 24,
};
---
<label 
  class="checkmark-label"
  for={name}
  class:list={[
    disabled && "disabled",
    color,
    size,
  ]}
>
  <div class="checkmark-container">
    <Icon
      name='checkmark'
      class={'checkmark'}
      width={iconSizes[size]}
      height={iconSizes[size]}
    />
    <input
      type="checkbox"
      name={name}
      id={name}
      checked={defaultChecked}
      disabled={disabled}
      required={isRequired}
      class="checkbox"
    />
  </div>
  <span>
    {label} <span class="req-star">{isRequired && "*"}</span>
  </span>
</label>
<style is:global>
  .checkmark-label {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: .5rem;
    position: relative;
    margin: .25rem 0;
  }

  .checkmark-label.disabled {
    opacity: .5;
    pointer-events: none;
  }

  .checkmark-container {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(var(--default-base));
    border: 2px solid hsl(var(--default-base));
    border-radius: .5rem;
    cursor: pointer;
    transition: all .15s ease;
  }

  .checkmark-label:hover .checkmark-container {
    background-color: hsl(var(--default-hover));
  }

  .checkmark-label:active .checkmark-container {
    background-color: hsl(var(--default-active));
    scale: .9;
  }

  .checkmark-label.sm {
    font-size: .875em;
  }

  .checkmark-label.sm .checkmark-container {
    width: 1.25rem;
    height: 1.25rem;
  }

  .checkmark-label.md .checkmark-container {
    width: 1.5rem;
    height: 1.5rem;
  }

  .checkmark-label.lg {
    font-size: 1.125em;
  }

  .checkmark-label.lg .checkmark-container {
    width: 1.75rem;
    height: 1.75rem;
  }

  .primary .checkmark-container:has(.checkbox:checked) {
    border-color: hsl(var(--primary-base));
    background-color: hsl(var(--primary-base));
  }

  .success .checkmark-container:has(.checkbox:checked) {
    border-color: hsl(var(--success-base));
    background-color: hsl(var(--success-base));
  }

  .warning .checkmark-container:has(.checkbox:checked) {
    border-color: hsl(var(--warning-base));
    background-color: hsl(var(--warning-base));
  }

  .danger .checkmark-container:has(.checkbox:checked) {
    border-color: hsl(var(--danger-base));
    background-color: hsl(var(--danger-base));
  }

  .req-star {
    color: hsl(var(--danger-base));
    font-weight: 700;
  }

  .checkbox {
    width: 0;
    height: 0;
    visibility: hidden;
    opacity: 0;
    margin: 0;
  }

  .checkmark polyline {
    transition: all .15s ease;
    color: hsl(var(--text-normal));
  }

  .primary .checkmark polyline {
    color: hsl(var(--text-inverted));
  }

  .success .checkmark polyline {
    color: hsl(var(--text-dark));
  }

  .warning .checkmark polyline {
    color: hsl(var(--text-dark));
  }

  .danger .checkmark polyline {
    color: hsl(var(--text-light));
  }

  .checkmark-container:has(.checkbox:checked) {
    .checkmark polyline {
      stroke-dashoffset: 44;
    }
  }
</style>