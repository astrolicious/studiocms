---
import { generateID } from '../utils/generateID';

type Option = {
	label: string;
	value: string;
};

type Props = {
	label: string;
	color?: 'default' | 'primary' | 'success' | 'warning' | 'danger';
	defaultValue?: Option['value'];
	options: Option[];
	disabled?: boolean;
	name?: string;
	isRequired?: boolean;
	horizontal?: boolean;
	class?: string;
};

const {
	label,
	color,
	defaultValue,
	options,
	disabled,
	name = generateID('radio'),
	isRequired,
	horizontal,
	class: className,
} = Astro.props;
---

<div 
  class="radio-container"
  class:list={[
    disabled && "disabled",
    horizontal && "horizontal",
    color,
    className
  ]}
>
  <span>
    {label} <span class="req-star">{isRequired && "*"}</span>
  </span>
  <div class="radio-inputs">
    {options.map(({ label, value }) => (
      <label for={value} class="radio-label">
        <div class="radio-box-container">
          <div class="radio-box" />
        </div>
        <input 
          class="radio-toggle" 
          type="radio" 
          value={value} 
          id={value} 
          name={name} 
          checked={value === defaultValue} 
          disabled={disabled}
          required={isRequired}
        />
        <span>{label}</span>
      </label>
    ))}
  </div>
</div>
<style>
  .radio-container {
    display: flex;
    flex-direction: column;
    gap: .5rem;
  }

  .radio-container.disabled {
    opacity: .5;
  }

  .req-star {
    color: hsl(var(--danger-base));
    font-weight: 700;
  }

  .radio-inputs {
    display: flex;
    flex-direction: column;
    gap: .75rem;
  }

  .radio-container.horizontal .radio-inputs {
    flex-direction: row;
  }

  .radio-label {
    display: flex;
    flex-direction: row;
    gap: .5rem;
    position: relative;
  }

  .radio-label:hover .radio-box {
    outline-color: hsl(var(--default-hover));
  }

  .radio-container:not(.disabled) .radio-label:active .radio-box {
    outline-color: hsl(var(--default-active));
    scale: .9;
  }

  .radio-label:has(.radio-toggle:checked) .radio-box {
    background-color: hsl(var(--text-normal));
    outline-color: hsl(var(--text-normal));
  }

  .radio-container.primary .radio-label:has(.radio-toggle:checked) .radio-box {
    background-color: hsl(var(--primary-base));
    outline-color: hsl(var(--primary-base));
  }

  .radio-container.success .radio-label:has(.radio-toggle:checked) .radio-box {
    background-color: hsl(var(--success-base));
    outline-color: hsl(var(--success-base));
  }

  .radio-container.warning .radio-label:has(.radio-toggle:checked) .radio-box {
    background-color: hsl(var(--warning-base));
    outline-color: hsl(var(--warning-base));
  }

  .radio-container.danger .radio-label:has(.radio-toggle:checked) .radio-box {
    background-color: hsl(var(--danger-base));
    outline-color: hsl(var(--danger-base));
  }

  .radio-box-container {
    width: 20px;
    height: 20px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }

  .radio-box {
    width: 12px;
    height: 12px;
    border-radius: 20px;
    outline: 1px solid hsl(var(--default-base));
    outline-offset: 4px;
    transition: all .15s ease;
  }

  .radio-toggle {
    width: 0;
    height: 0;
    visibility: hidden;
    opacity: 0;
    margin: 0;
    position: absolute;
  }
</style>