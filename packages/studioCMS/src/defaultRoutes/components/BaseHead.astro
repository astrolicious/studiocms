---
import type { z } from 'astro/zod';
import Config from 'virtual:studiocms/config';
import { headDefaults } from 'studiocms:components';
import type { HeadConfigSchema } from '../../schemas/defaultFrontend';
import { createHead } from '../../utils/head';
import { fileWithBase } from '../../utils/base';

// // Import the global.css file here so that it is included on
// // all pages through the use of the <BaseHead /> component.
import './global.css';

const { defaultFrontEndConfig: { htmlDefaultHead, favicon } } = Config;

interface Props {
	title: string;
	description: string;
	lang?: string | undefined;
	image?: string | undefined;
}

const canonicalURL = Astro.site ? new URL(Astro.url.pathname, Astro.site) : undefined;

const {
	title,
	description,
	lang = "en",
	image = 'https://images.unsplash.com/photo-1707343843982-f8275f3994c5?q=80&w=1032&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
} = Astro.props;

const makeHeader = headDefaults(title, description, lang, Astro, favicon, image, canonicalURL)

const StudioCMSFrontEndHeads: z.input<ReturnType<typeof HeadConfigSchema>> = [
	// Fonts
	{ tag: 'link', attrs: { rel: 'preconnect', href: 'https://fonts.googleapis.com' } },
	{ tag: 'link', attrs: { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' } },
	{
		tag: 'link',
		attrs: {
			href: 'https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:wght@400;700&display=swap',
			rel: 'stylesheet',
		},
	},
];

makeHeader.push(...StudioCMSFrontEndHeads);

// Link to sitemap, but only when `site` is set.
if (Astro.site) {
	makeHeader.push({
		tag: 'link',
		attrs: {
			rel: 'sitemap',
			href: fileWithBase('/sitemap-index.xml'),
		},
	});
}

const head = createHead(makeHeader, htmlDefaultHead);
---

{head.map(({ tag: Tag, attrs, content }) => <Tag {...attrs} set:html={content} />)}