---
import { Alert, Button, Card, Details, Divider, Icon, Input, Switch } from 'astrolace:components';
import { Layout } from 'studiocms-dashboard:components';
import { makePageTitle } from '../../utils/makePageTitle';
import exclamationOctagon from "../../../../assets/exclamation-octagon.svg";
import check2Circle from "../../../../assets/check2-circle.svg";
import personAdd from "../../../../assets/person-add.svg";
import personExclamation from "../../../../assets/person-exclamation.svg";
import personRolodex from "../../../../assets/person-rolodex.svg";
---

<Layout title={makePageTitle("Welcome", {title: "StudioCMS"})} description="Welcome to StudioCMS" sideBarActiveItemID='start' includeSidebar={false}>
  <div class="container justify-center items-center px-12 w-[100vw]">

      <div class="text-5xl font-bold pb-4">Welcome to StudioCMS</div>
      <div class="flex flex-col py-2 w-full gap-4">
        <Card>
          <span class="font-bold">What is StudioCMS?</span> 
          <Divider class="divider" />
          StudioCMS is a simple, easy to use, and fast CMS for Astro. It's built with the latest technologies and is designed to be as simple as possible. It's also open source and free to use. 
        </Card>
        <Card>
          <span class="font-bold">How do I use it?</span> 
          <Divider class="divider" />
          To use StudioCMS, you need to have a basic understanding of Astro and how it works. As well as StudioCMS. You can use the CMS to create, edit, and delete posts. You can also use it to manage your site's settings and more.
        </Card>
        <Card>
          <span class="font-bold">What's next?</span> 
          <Divider class="divider" />
          The next step is to start by filling in your site details below!
        </Card>
        <Card>
          <span class="font-bold">Problems? or Need Help?</span> 
          <Divider class="divider" />
          If you have any problems or need help, you can visit the <a href="https://github.com/astrolicious/studiocms" target="_blank" class="text-blue-500">GitHub Repository</a> or join the <a href="https://chat.astrolicious.dev" target="_blank" class="text-blue-500">Discord Server</a> for help.
        </Card>
      </div>
      
      <Divider />

        <div class="py-8">
          <div class="bg-base-300 p-8 rounded-lg">

          <form method="post" action="/api/setup" id="first-time-setup">

            <Input name="title" id="title" label='Site Title' />

            <Divider />

            <Input name="description" id="description" label='Site Description' />

            <Divider />

            <Input name="og-image" id="og-image" label="OG Image URL" placeholder="Coming Soon" disabled />

            <Divider />

            <Switch name="local-setup" id="local-setup" value="1" size="medium" help-text="Would you like to setup a local Admin User or OAuth User?">
              <div class="textlabelinput">
                <Icon src={personExclamation.src} />
                Setup Local Admin User?
              </div>
            </Switch>
            
            <Details id="local-admin">
              <div class="textlabelinput" slot="summary">
                <Icon src={personAdd.src} /> 
                Local Admin Setup
              </div>

              <Input name="local-admin-name" id="local-admin-name" label="Username for Primary Admin ( Just set one, You can add more later )" />

              <Divider />

              <Input name="local-admin-display-name" id="local-admin-display-name" label="Display name for Primary Admin" />

              <Divider />

              <Input type="password" name="local-admin-password" id="local-admin-password" label="Password" password-toggle />
            </Details>

            <Details id="oauth-admin" open>
              <div class="textlabelinput" slot="summary"><Icon src={personRolodex.src} /> oAuth Admin Setup</div>
              <Input name="oauth-admin-name" id="oauth-admin-name" placeholder="Username of Primary Admin (ex. GithubUsername)" label='Username of Primary Admin (ex. GithubUsername)' helpText='( Just set one, You can add more later )' />
            </Details>

            <Divider />

            <div class="py-4 flex items-center justify-center">
              <Button variant="success" type="submit" outline>Initialize Database</Button>
            </div>

          </form>

          </div>
        </div> 

      <Alert id="form-error" variant="danger" duration={4000} closable>
        <Icon slot="icon" src={exclamationOctagon.src}/>
        <strong>Something went wrong!</strong>
        <Divider />
        <div id="form-error-message"></div>
      </Alert>
      <Alert id="form-success" variant="success" duration={4000} closable>
        <Icon slot="icon" src={check2Circle.src}/>
        <strong>Success!</strong>
        <Divider />
        <div id="form-success-message"></div>
      </Alert>


  </div>
</Layout>

<script is:inline>
	const alertElement = document.getElementById("form-error");
  const errorMessageElement = document.getElementById("form-error-message");
	const successAlertElement = document.getElementById("form-success");
  const successMessageElement = document.getElementById("form-success-message");
  const localSetupSwitch = document.getElementById('local-setup');
  const localAdmin = document.getElementById('local-admin');
  const oauthAdmin = document.getElementById('oauth-admin');
  const firstTimeSetupForm = document.getElementById('first-time-setup');

  // Update the disabled state of the local-admin and oauth-admin details based on the checkbox state
  localSetupSwitch.addEventListener('sl-change', () => {
    if (localSetupSwitch.checked) {
      localAdmin.show();
      oauthAdmin.hide();
    } else {
      localAdmin.hide();
      oauthAdmin.show();
    }
  })

	firstTimeSetupForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		errorMessageElement.innerText = "";
		const formElement = e.target;
		const response = await fetch(formElement.action, {
			method: formElement.method,
			body: new FormData(formElement)
		});
		if (response.ok) {
      successMessageElement.innerText = "Successfully Seeded Database! Redirecting...";
      logger.info('First Time Setup Success: Successfully Seeded Database');
      successAlertElement.toast();
      setTimeout(() => {
        window.location.href = "/done";
      }, 1000)
		} else {
			errorMessageElement.innerText = (await response.json()).error;
      logger.error(`First Time Setup Error: ${errorMessageElement.innerText}`);
      alertElement.toast();
		}
	});
</script>

<style>
  .textlabelinput {
    --uno-apply: "text-xl font-bold flex items-center gap-2 pb-2";
  }
</style>