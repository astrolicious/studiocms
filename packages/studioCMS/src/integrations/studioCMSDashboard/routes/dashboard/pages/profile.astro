---
// @ts-expect-error - Some types can only be imported from the Astro runtime
import { SiteConfig, db } from 'astro:db';
import { Layout } from 'studiocms-dashboard:components';
import Config from 'virtual:studiocms/config';
import { urlGenFactory, authHelper, toPascalCase, type Locals } from 'studiocms:helpers';

if (Config.includedIntegrations.useInoxSitemap) {
    import('sitemap-ext:config').then((sitemap) => {
        sitemap.default(false)
    })
}

const { dashboardConfig: { developerConfig, dashboardRouteOverride } } = Config;

const ConfigArray = await db.select().from(SiteConfig);
const contextConfig = ConfigArray.pop();

const locals = Astro.locals as Locals;
const { permissionLevel, name, username, currentUserSession, githubURL } = await authHelper(locals);

// If the user is not logged in, redirect to the login page
if ( !developerConfig.testingAndDemoMode ) {
    if ( permissionLevel === "unknown" ) {
        console.log('User is not logged in. Redirecting to login page.');
        return Astro.redirect(await urlGenFactory(true, "login", dashboardRouteOverride))
    }
}
const breadcrumbs = {
    Dashboard: await urlGenFactory(true, '', dashboardRouteOverride),
    UserProfile: await urlGenFactory(true, 'profile', dashboardRouteOverride),
}


const pageTitle = `User profile | ${contextConfig.title}`;
---

<Layout 
    sideBarActiveItemID="profile" 
    title={pageTitle}
    description={contextConfig.description} >

    <div class="flex grow w-full pb-4">
        <sl-breadcrumb>
            <span slot="separator">/</span>
            <sl-breadcrumb-item href={breadcrumbs.Dashboard}>Dashboard
                <sl-icon slot="prefix" name="columns-gap"></sl-icon>
            </sl-breadcrumb-item>
            <sl-breadcrumb-item href={breadcrumbs.UserProfile}>User Profile</sl-breadcrumb-item>
        </sl-breadcrumb>
    </div>

    <div class="container max-w-[100vw] lg:max-w-[1800px] min-w-[75vw]">

        <div class="text-5xl font-bold text-center pb-8">User Profile</div>


        <sl-card class="card-header">
            <div slot="header" class="text-5xl font-bold">
                {username}'s Profile
            </div>
            <div class="py-2">
                <text class="text-lg">
                    <bold>Display Name:</bold> {name}
                </text>
                <br />
                <text class="text-lg">
                    <bold>Role:</bold> {toPascalCase(permissionLevel)}
                </text>
                <br />
                { githubURL && (
                    <text class="text-lg">
                        <bold>GitHub:</bold> <a class="text-blue" href={githubURL}>{username}</a>
                    </text>
                    <br />
                )}
                <text class="text-lg">
                    { currentUserSession && (
                        <p><bold>Session Expires:</bold> {new Date(currentUserSession.expiresAt).toLocaleString()} </p>
                    ) } 
                </text>
            </div>
        </sl-card>


    </div>
</Layout>
