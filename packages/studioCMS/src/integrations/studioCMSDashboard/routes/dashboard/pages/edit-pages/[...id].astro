---
import { logger } from '@it-astro:logger:StudioCMS';
import { Layout } from 'studiocms-dashboard:components';
import { getPageById, getSiteConfig } from 'studiocms-dashboard:contentHelper';
import { StudioCMSRoutes, getEditRoute } from 'studiocms-dashboard:routeMap';
import { type Locals, authHelper } from 'studiocms:helpers';
import { makePageTitle } from '../../../../utils/makePageTitle';
import CrumbStack from '../../components/CrumbStack.astro';
import PageEditAndCreateForm from '../../components/PageEditAndCreateForm.astro';

const {
	mainLinks: { dashboardIndex, pageEdit, livePreviewBox },
	endpointLinks: {
		pages: { editPages: editPagesEndpoint },
	},
} = StudioCMSRoutes;

const { id } = Astro.params;

if (!id) {
	return Astro.redirect(dashboardIndex);
}
const contextConfig = await getSiteConfig();
const pageData = await getPageById(id);

if (!pageData.id) {
	return Astro.redirect(dashboardIndex);
}

const editRoute = await getEditRoute(id);
const { permissionLevel } = await authHelper(Astro.locals as Locals);

// Check Permission Level
if (permissionLevel !== 'admin' && permissionLevel !== 'editor') {
	logger.info('User is not an admin or editor. Redirecting to profile page.');
	return Astro.redirect(StudioCMSRoutes.mainLinks.userProfile);
}
---

<Layout 
    sideBarActiveItemID="edit-pages" 
    title={makePageTitle("Edit Page", contextConfig)}
    description={contextConfig.description} >

    <CrumbStack 
        isDashboard 
        items={[
            { href: dashboardIndex, text: 'Dashboard' },
            { href: pageEdit, text: 'Existing Pages' },
            { href: editRoute, text: `Edit Page: ${pageData.title}` }
        ]} />

    <PageEditAndCreateForm 
        pageData={pageData}
        livePreviewBox={livePreviewBox}
        pageEdit={pageEdit} 
        isEditPage 
        formActionURL={editPagesEndpoint} />
</Layout>
