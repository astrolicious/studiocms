---
import { Card, Icon, ProgressBar } from "astrolace:components";
import type { WebVitalsResponseItem } from "studiocms-dashboard:web-vitals";
import { calculateClsScorePercent, clsDataAverage, lcpDataAverage, progressBarClsColor, progressBarClsTrackColor, calculateLcpScorePercent, progressBarLcpColor, progressBarLcpTrackColor, inpDataAverage, calculateInpScorePercent, progressBarInpColor, progressBarInpTrackColor } from "./webVitalsUtils";

interface Props {
    lcpData: WebVitalsResponseItem[];
    clsData: WebVitalsResponseItem[];
    inpData: WebVitalsResponseItem[];
}

const { lcpData, clsData, inpData } = Astro.props;

---
<div class="w-full grid max-sm:grid-cols-1 max-lg:grid-cols-2 lg:grid-cols-3 gap-4">
    <Card>
        <div slot="header" class="flex flex-row items-center gap-2">
            <Icon slot="icon" name="speedometer" class:list={"lcp-icon"} />
            <div class="text-xl font-bold">Largest Contentful Paint</div>
        </div>
        <div class="pt-2">
            <ProgressBar 
                value={calculateLcpScorePercent(lcpDataAverage(lcpData))} 
                label="LCP Data" 
                class:list={["progressbar-lcp"]}>
                <span>{lcpDataAverage(lcpData)}ms</span>
            </ProgressBar>
        </div>
    </Card>
    <Card>
        <div slot="header" class="flex flex-row items-center gap-2">
            <Icon slot="icon" name="layout-wtf" class:list={"cls-icon"} />
            <div class="text-xl font-bold">Cumulative Layout Shift</div>
        </div>
        <div class="pt-2">
            <ProgressBar 
                value={calculateClsScorePercent(clsDataAverage(clsData))} 
                label="CLS Data" 
                class:list={["progressbar-cls"]}>
                    <span>{clsDataAverage(clsData)}</span>
            </ProgressBar>
        </div>
    </Card>
    <Card>
        <div slot="header" class="flex flex-row items-center gap-2">
            <Icon slot="icon" name="cursor" class:list={"inp-icon"} />
            <div class="text-xl font-bold">Interaction to Next Paint</div>
        </div>
        <div class="pt-2">
            <ProgressBar 
                value={calculateInpScorePercent(inpDataAverage(inpData))} 
                label="CLS Data" 
                class:list={["progressbar-inp"]}>
                    <span>{inpDataAverage(inpData)}ms</span>
            </ProgressBar>
        </div>
    </Card>
</div>

<style scoped define:vars={{ 
    lcptrack: progressBarLcpTrackColor(lcpDataAverage(lcpData)), 
    lcpcolor: progressBarLcpColor(lcpDataAverage(lcpData)),
    clstrack: progressBarClsTrackColor(clsDataAverage(clsData)),
    clscolor: progressBarClsColor(clsDataAverage(clsData)),
    inpcolor: progressBarInpColor(inpDataAverage(inpData)),
    inptrack: progressBarInpTrackColor(inpDataAverage(inpData))
    }}>

    .inp-icon {
        color: var(--inpcolor);
        font-size: 2rem;
    }

    .progressbar-inp {
        --track-color: var(--inptrack);
        --indicator-color: var(--inpcolor);
        --height: 1.5rem;
    }

    .progressbar-inp::part(label) { 
        font-weight: bolder; 
        font-size: 1rem; 
    }

    .cls-icon {
        color: var(--clscolor);
        font-size: 2rem;
    }

    .progressbar-cls {
        --track-color: var(--clstrack);
        --indicator-color: var(--clscolor);
        --height: 1.5rem;
    }

    .progressbar-cls::part(label) { 
        font-weight: bolder; 
        font-size: 1rem; 
    }

    .lcp-icon {
        color: var(--lcpcolor);
        font-size: 2rem;
    }

    .progressbar-lcp {
        --track-color: var(--lcptrack);
        --indicator-color: var(--lcpcolor);
        --height: 1.5rem;
    }

    .progressbar-lcp::part(label) { 
        font-weight: bolder; 
        font-size: 1rem; 
    }
</style>