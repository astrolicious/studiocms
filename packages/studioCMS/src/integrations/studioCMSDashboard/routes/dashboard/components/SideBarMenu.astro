---
import { authHelper, urlGenFactory, type Locals } from "studiocms:helpers";
import Config from "virtual:studiocms/config";

// Desctructure config
const { dashboardConfig: { developerConfig: { testingAndDemoMode } } } = Config;

// Get Astro props
type Props = {
    sideBarActiveItemID: string;
    DashboardRouteOverride?: string;
}

// Make Astro props available
const { sideBarActiveItemID, DashboardRouteOverride } = Astro.props;

// Active class for sidebar
const activeClass = "bg-base-300"; // For primary color replace with `active` class

// Get permission level
const { permissionLevel } = await authHelper(Astro.locals as Locals);

// Sidebar link type
export type SideBarLink = {
    id: string;
    href: string;
    text: string;
    minPermissionLevel: string;
    icon: string;
}

// Side bar links map
const sideBarLinkMap: SideBarLink[] = [];

// Add default dashboard page links
const defaultDashboardPageLinks: SideBarLink[] = [
    { id: "home", href: await urlGenFactory(false, undefined), text: "View Site", minPermissionLevel: "unknown", icon: "i-mdi:globe-arrow-left" },
    { id: "dashboard", href: await urlGenFactory(true, undefined, DashboardRouteOverride), text: "Dashboard", minPermissionLevel: "unknown", icon: "i-mdi:view-dashboard-outline" },
    { id: "profile", href: await urlGenFactory(true, "profile/", DashboardRouteOverride), text: "User Profile", minPermissionLevel: "unknown", icon: "i-mdi:account-box" },
    { id: "new-page", href: await urlGenFactory(true, "new/page/", DashboardRouteOverride), text: "Create New Page", minPermissionLevel: "editor", icon: "i-mdi:page-next" },
    { id: "edit-pages", href: await urlGenFactory(true, "page-list/", DashboardRouteOverride), text: "Edit Pages", minPermissionLevel: "editor", icon: "i-mdi:file-document-edit" },
    { id: "site-config", href: await urlGenFactory(true, "configuration/", DashboardRouteOverride), text: "Site Configuration", minPermissionLevel: "editor", icon: "i-mdi:hammer-wrench" }
]

// Add default dashboard page links to sidebar link map
sideBarLinkMap.push(...defaultDashboardPageLinks);

// TODO: Add custom dashboard page links here

// Logout link
const logoutLink = await urlGenFactory(true, "logout", DashboardRouteOverride);

---

<ul class="menu grow shrink menu-md ">

    { sideBarLinkMap.map(({ id, href, text, minPermissionLevel, icon }) => {
        if ( minPermissionLevel === "unknown" && ( 
            permissionLevel === "unknown" || 
            permissionLevel === "admin" || 
            permissionLevel === "editor" || 
            permissionLevel === "visitor" ) ) {
            return (
            <li>
                <a class="py-3 text-base" id={id} href={href}><div class={`${icon} inline`}></div>{text}</a>
            </li>
            );
        }
        if ((
            testingAndDemoMode || 
            minPermissionLevel === "editor"
            ) && (
            permissionLevel === "editor" || 
            permissionLevel === "admin" || 
            testingAndDemoMode )) {
            return (
            <li>
                <a class="py-3 text-base" id={id} href={href}><div class={`${icon} inline`}></div>{text}</a>
            </li>
            );
        }
        if (( 
            testingAndDemoMode || 
            minPermissionLevel === "admin" 
            ) && ( 
            permissionLevel === "admin" || 
            testingAndDemoMode )) {
            return (
            <li>
                <a class="py-3 text-base" id={id} href={href}><div class={`${icon} inline`}></div>{text}</a>
            </li>
            );
        }



    }) }

    { ( testingAndDemoMode || permissionLevel !== "unknown" ) ? (
        <form method="post" action={logoutLink}>
            <button class="btn"><div class="i-mdi:logout"></div>Sign out</button>
        </form>
    ) : "" }

</ul>

<script define:vars={{ sideBarActiveItemID: sideBarActiveItemID, activeClass: activeClass }}>
const activeItemElem = document.getElementById(sideBarActiveItemID);
activeItemElem && activeItemElem.classList.add(activeClass);
</script>