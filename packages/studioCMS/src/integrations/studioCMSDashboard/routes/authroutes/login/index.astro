---
import { Layout } from 'studiocms-dashboard:components';
import Config from 'virtual:studiocms/config';
import type { Locals } from 'studiocms:helpers';
import OauthProviders from '../components/OauthProviders.astro';
import { StudioCMSRoutes } from 'studiocms-dashboard:routeMap';
import { Alert, Button, Icon, Input } from 'astrolace:components';

const { 
  dashboardConfig,
  dashboardConfig: { 
    AuthConfig: { 
      providers: {
        usernameAndPassword,
        usernameAndPasswordConfig: {
          allowUserRegistration,
        }
      } 
    } 
  } 
} = Config;

const { authLinks: { loginAPI, signupURL }, mainLinks: { dashboardIndex } } = StudioCMSRoutes;

const locals = Astro.locals as Locals;

if (locals.isLoggedIn) {
	return Astro.redirect(dashboardIndex);
}
---

<Layout title='Login Page' description="Login Page" sideBarActiveItemID='login' includeSidebar={false}>
  <div class="px-10 pb-12 mt-5 flex flex-col content-center items-center">

      <div class="text-5xl font-bold">Login</div>
      <div class="py-2">
          <text class="text-lg">
            To access this site, you need to log in!
          </text>
      </div>
    <br />

      <OauthProviders dashboardConfig={dashboardConfig} />

      { usernameAndPassword && (
        <div class="py-8">
          <div class="bg-base-300 p-8 rounded-lg md:w-[32rem]">

          <form method="post" action={loginAPI}>

              <Input 
                name="username" 
                id="username" 
                label='Username'
                /><br />

              <Input 
                type="password" 
                name="password"
                id="password"
                label="Password"
                password-toggle
                /><br />

            <center>
              <Button variant="primary" type="submit" outline>Continue <Icon slot="suffix" library="mdi" name="login"/></Button>
            </center>

          </form>

          {allowUserRegistration && (
            <div class="py-4">
              <center>
                <a href={signupURL} class="text-lg">Don't have an account? Register here!</a>
              </center>
            </div>
          )}

          </div>
        </div> 
      )}

      <Alert id="form-error" variant="danger" duration={4000} closable>
        <Icon slot="icon" name="exclamation-octagon" />
        <strong>Something went wrong!</strong><br />
        <div id = "form-error-message"></div>
      </Alert>
      <Alert id="form-success" variant="success" duration={4000} closable>
        <Icon slot="icon" name="check2-circle" />
        <strong>Success!</strong><br />
        <div id = "form-success-message"></div>
      </Alert>

  </div>
</Layout>

<script>
import type { SlAlert } from "astrolace:types";

	const alertElement = document.getElementById("form-error") as SlAlert;
  const errorMessageElement = document.getElementById("form-error-message")!;
	const successAlertElement = document.getElementById("form-success") as SlAlert;
  const successMessageElement = document.getElementById("form-success-message")!;

	document.forms[0]?.addEventListener("submit", async (e) => {
		e.preventDefault();
		errorMessageElement.innerText = "";
		const formElement = e.target as HTMLFormElement;
		const response = await fetch(formElement.action, {
			method: formElement.method,
			body: new FormData(formElement)
		});
		if (response.ok) {
      successMessageElement.innerText = "Login successful! Redirecting...";
      successAlertElement.toast();
      setTimeout(() => {
        window.location.reload();
      }, 1000)
		} else {
			errorMessageElement.innerText = (await response.json()).error;
      alertElement.toast();
		}
	});
</script>