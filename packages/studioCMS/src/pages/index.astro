---
// @ts-expect-error - This is a missing type definition for the `astro:db` import since its a virtual module during Astro Runtime
import { Pages, db, eq } from 'astro:db';
import sitemap from 'sitemap-ext:config';
import Config from 'virtual:astro-studio-cms:config';
import Default from '../layouts/Default.astro';
import { renderMarkDoc } from '../utils/markdoc';
import { markdown } from '../utils/marked';

sitemap(true); // opt-in

const postArrayed = await db.select().from(Pages).where(eq(Pages.slug, 'index'));

const post = postArrayed.pop();

type Props = {
	post: typeof Pages.$inferSelect;
};

function contentRenderer() {
	if (Config.contentRenderer === 'markdoc') {
		return renderMarkDoc(post.content);
	}
	return markdown(post.content);
}
---

<Default title={post.title} description={post.description} heroImage={post.heroImage}>
		<main>
		<Fragment 
		set:html={contentRenderer()} />

		</main>
</Default>
<style>
    .btn {
        padding: 0.5rem;
        background-color: rgb(184, 184, 184);
        font-weight: bold;
        color: #202020;
        border: 1px solid #202020;
        border-radius: 99rem;
        cursor: pointer;
		float: right;
    }
</style>