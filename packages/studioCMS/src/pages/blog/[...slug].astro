---
// @ts-expect-error - This is a missing type definition for the `astro:db` import since its a virtual module during Astro Runtime
import { Blog, db, eq } from 'astro:db';
import sitemap from 'sitemap-ext:config';
import Config from 'virtual:astro-studio-cms:config';
import BlogPost from '../../layouts/BlogPost.astro';
import { renderMarkDoc } from '../../utils/markdoc';
import { markdown } from '../../utils/marked';

sitemap(async ({ addToSitemap }) => {
	const posts = await db.select().from(Blog);

	addToSitemap(
		posts.map((post: Blog.$inferSelect) => ({
			slug: post.slug as string,
		}))
	);
});

const { slug } = Astro.params;
const postArrayed = await db.select().from(Blog).where(eq(Blog.slug, slug));
const post = postArrayed.pop();

if (!slug || !post) {
	return Astro.redirect(`${import.meta.env.BASE_URL}404`);
};

function contentRenderer() {
	if (Config.contentRenderer === 'markdoc') {
		return renderMarkDoc(post.content as string);
	}
	return markdown(post.content as string);
}
---
<BlogPost 
	title={post.title} 
	description={post.description} 
	heroImage={post.heroImage} 
	publishedAt={post.publishedAt} 
	updatedAt={post.updatedAt} >
	<Fragment 
		set:html={contentRenderer()} />
</BlogPost>