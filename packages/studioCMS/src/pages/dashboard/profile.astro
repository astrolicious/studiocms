---
import Default from '../../layouts/Default.astro';
import { lucia } from '../../lib/auth';
import { rankCheck } from '../../utils/rankcheck';
import type { Locals } from './locals';
import sitemap from 'sitemap-ext:config';
sitemap(false); // opt-out

const locals = Astro.locals as Locals;
const currentUserRank = await rankCheck(locals);
const sessions = await lucia.getUserSessions(locals.dbUser.id);

function redirectToPath(path: string) {
	return Astro.redirect(import.meta.env.BASE_URL + path);
}

const getUserName = locals.dbUser.name ? locals.dbUser.name : locals.user.username;

// If the user is not logged in, redirect to the login page
if ( currentUserRank === "unknown" ) {
    console.log('User is not logged in. Redirecting to login page.');
    return redirectToPath('dashboard/login');
}
---

<Default>
        <div class="dash">
            <div class="dash-header">
                <img src={locals.dbUser.avatar} alt={locals.dbUser.name} height="64px" width="64px">
                <p><bold>{getUserName}</bold>'s Profile</p>
                <form method="post" action={import.meta.env.BASE_URL+"dashboard/logout"}>
                    <button>Logout</button>
                </form>
            </div>
        <div>

                <p><bold>Display Name:</bold> {locals.dbUser.name}</p>
                <p><bold>Role:</bold> {currentUserRank.toUpperCase()}</p>
                <p><bold>GitHub:</bold> <a href={locals.dbUser.githubURL}>{locals.user.username}</a> 
                { sessions[0] && (
                    <p><bold>Session Expires:</bold> {new Date(sessions[0].expiresAt).toLocaleString()} </p>
                ) } 
                </p>
                
                
            </div>
        </div>
</Default>

<style>
    .dash {
        padding: 2rem;
        border: 2px solid #ccc;
        border-radius: 5rem;
        background-color: #fff;
        margin: 2rem;
    }
    .dash-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-right: 4rem;
        padding-left: 4rem;
    }
    bold {
        font-weight: bold;
    }
    .font-small {
        font-size: 1rem;
    }
    form {
        display: flex;
        justify-content: flex-end;
    }
    button {
        padding: 1rem;
        background-color: rgb(202, 0, 0);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
</style>