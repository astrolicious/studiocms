---
// @ts-expect-error - This is a missing type definition for the `astro:db` import since its a virtual module during Astro Runtime
import { Permissions, db, eq } from 'astro:db';
import Dashboard from '../../layouts/Dashboard.astro';
import { rankCheck } from '../../utils/rankcheck';
import type { Locals } from './locals';
import sitemap from 'sitemap-ext:config';
sitemap(false); // opt-out

function redirectToPath(path: string) {
	return Astro.redirect(import.meta.env.BASE_URL + path);
}
const currentUserRank = await rankCheck(Astro.locals as Locals);

if ( currentUserRank === "unknown" ) {
    console.log('User is not logged in. Redirecting to login page.');
    return redirectToPath('dashboard/login');
}
if (currentUserRank !== 'admin') {
	console.log('User is not an admin');
	return redirectToPath('dashboard/profile');
}

if (Astro.request.method === 'POST') {
	const formData = await new Request(Astro.request.url, {
		method: Astro.request.method,
		headers: Astro.request.headers,
		body: Buffer.from(await Astro.request.arrayBuffer()),
	}).formData();

	const admin = formData.get('admins');
	const rank = formData.get('rank');

	await db
		.insert(Permissions)
		.values({
			username: admin as string,
			rank: rank as string,
		})
		.then(() => {
			return new Response('Success', { status: 200 });
		})
		.catch(() => {
			return new Response('Error', { status: 500 });
		});

	redirectToPath('dashboard/');
}

const adminList = await db.select().from(Permissions);
---

<Dashboard title='Add New Admins'>
    <p>Note: To delete admins you can do this from your Astro Studio Dashboard.</p>

    <div>
        <h4>Current Admins:</h4>
        <ul>
            {
                adminList.map((admin: Permissions.$inferSelect) => {
                    return (
                        <li>{admin.username} - {admin.rank}</li>
                    )
                })
            }
        </ul>
    </div>

    <div>
        <form method="post" enctype="multipart/form-data" >
                
            <label for="admins">Add New Admin or Editor</label><br>
            <input 
                type="text" 
                id="admins" 
                name="admins" 
                placeholder="GitHubUsername"
                required><br>
            <input 
                type="text" 
                id="rank" 
                name="rank" 
                placeholder="admin / editor"
                value="editor"
                required><br>
            <center>
                <button class="btn" type="submit">Add!</button>
            </center>

        </form>

                
    </div>
</Dashboard>

<style>
    .dash {
        padding: 2rem;
        border: 2px solid #ccc;
        border-radius: 5rem;
        background-color: #fff;
        margin: 2rem;
        
    }
    bold {
        font-weight: bold;
    }
    .font-small {
        font-size: 1rem;
    }
    .dash-header {
        display: flex;
        justify-content: space-between;
    }
    .right {
        display: flex;
        justify-content: flex-end;
        padding-right: 4rem;
    }
    .left {
        display: flex;
        justify-content: flex-start;
        padding-left: 4rem;
    }
    button {
        padding: 1rem;
        background-color: rgb(202, 0, 0);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    .btn {
        padding: 1rem;
        background-color: rgb(0, 37, 202);
        font-weight: bold;
        color: #fff;
        border: none;
        border-radius: 99rem;
        cursor: pointer;
    }
    input {
        background-color: #f4f4f4;
        border-radius: 10px;
        padding: 0.25rem;
        border: rgb(124, 124, 124) 1px solid;
        width: 35vmax;
    }
    textarea {
        background-color: #f4f4f4;
        border-radius: 10px;
        padding: 0.25rem;
        border: rgb(124, 124, 124) 1px solid;
        width: 100%;
    }
    label {
        font-size: large;
        font-weight: bold;
    }
    .info-text {
        font-size: small;
        display: inline;
        font-style: italic;
    }
    info {
        font-size: small;
        display: inline;
        font-style: italic;
    }

</style>