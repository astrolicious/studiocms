---
import { Aside, TabItem, Tabs } from '@astrojs/starlight/components';
import type { ComponentProps } from 'astro/types';
import Code from './Code.astro';

import {
	type CommandOptions,
	type CommandType,
	type PackageManager,
	getCommand,
	getIcon,
	getSupportedPkgManagers,
} from './pkg';

export type PackageManagersProps = Props;

interface Props extends CommandOptions {
	frame?: 'none' | 'terminal';
	icons?: boolean;
	pkg?: string | undefined;
	pkgManagers?: PackageManager[];
	title?: string | undefined;
	type?: CommandType;
}

const {
	frame = 'terminal',
	icons = true,
	pkg,
	pkgManagers,
	title = 'Terminal',
	type = 'add',
	...options
} = Astro.props;
const singlePkgManager = pkgManagers?.length === 1 ? pkgManagers[0] : undefined;

function getTabItemProps(pkgManager: PackageManager) {
	const props: ComponentProps<typeof TabItem> = { label: pkgManager };
	const icon = getIcon(pkgManager) as ComponentProps<typeof TabItem>['icon'];
	if (icons && icon) props.icon = icon;
	return props;
}
---

{
  singlePkgManager ? (
    <Code code={getCommand(singlePkgManager, type, pkg, options)} lang="sh" {title} />
  ) : (
    <Tabs syncKey="package-managers">
      {getSupportedPkgManagers(type, pkgManagers).map((pkgManager) => (
        <TabItem {...getTabItemProps(pkgManager)}>
			<Code 
				code={getCommand(pkgManager, type, pkg, options)} 
				lang="bash"
				{title}
				/>
		  { pkgManager === 'bun' && <Aside type={'caution'} title='CAUTION'>While Bun does support Astro, There are known issues both in dev and in production. Issues should be reported to the <a target="_blank" rel="noopener noreferrer" href="https://github.com/oven-sh/bun">Bun project â¤´</a>. We don't recommend using this beyond experimentation & testing for the time being.</Aside>}
        </TabItem>
      ))}
    </Tabs>
  )
}
